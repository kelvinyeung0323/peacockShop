<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peacock.shop.web.mapper.PackMapper" >
  <resultMap id="BaseResultMap" type="com.peacock.shop.web.domain.Pack" >
    <constructor >
      <idArg column="pack_id" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="pack_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pack_img" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pack_fee" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="free_money" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="pack_desc" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pack_id, pack_name, pack_img, pack_fee, free_money, pack_desc
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.PackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pack
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Byte" >
    select 
    <include refid="Base_Column_List" />
    from pack
    where pack_id = #{packId,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte" >
    delete from pack
    where pack_id = #{packId,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.peacock.shop.web.domain.PackExample" >
    delete from pack
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.peacock.shop.web.domain.Pack" >
    insert into pack (pack_id, pack_name, pack_img, 
      pack_fee, free_money, pack_desc
      )
    values (#{packId,jdbcType=TINYINT}, #{packName,jdbcType=VARCHAR}, #{packImg,jdbcType=VARCHAR}, 
      #{packFee,jdbcType=DECIMAL}, #{freeMoney,jdbcType=SMALLINT}, #{packDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.peacock.shop.web.domain.Pack" >
    insert into pack
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="packId != null" >
        pack_id,
      </if>
      <if test="packName != null" >
        pack_name,
      </if>
      <if test="packImg != null" >
        pack_img,
      </if>
      <if test="packFee != null" >
        pack_fee,
      </if>
      <if test="freeMoney != null" >
        free_money,
      </if>
      <if test="packDesc != null" >
        pack_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="packId != null" >
        #{packId,jdbcType=TINYINT},
      </if>
      <if test="packName != null" >
        #{packName,jdbcType=VARCHAR},
      </if>
      <if test="packImg != null" >
        #{packImg,jdbcType=VARCHAR},
      </if>
      <if test="packFee != null" >
        #{packFee,jdbcType=DECIMAL},
      </if>
      <if test="freeMoney != null" >
        #{freeMoney,jdbcType=SMALLINT},
      </if>
      <if test="packDesc != null" >
        #{packDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.peacock.shop.web.domain.PackExample" resultType="java.lang.Integer" >
    select count(*) from pack
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pack
    <set >
      <if test="record.packId != null" >
        pack_id = #{record.packId,jdbcType=TINYINT},
      </if>
      <if test="record.packName != null" >
        pack_name = #{record.packName,jdbcType=VARCHAR},
      </if>
      <if test="record.packImg != null" >
        pack_img = #{record.packImg,jdbcType=VARCHAR},
      </if>
      <if test="record.packFee != null" >
        pack_fee = #{record.packFee,jdbcType=DECIMAL},
      </if>
      <if test="record.freeMoney != null" >
        free_money = #{record.freeMoney,jdbcType=SMALLINT},
      </if>
      <if test="record.packDesc != null" >
        pack_desc = #{record.packDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pack
    set pack_id = #{record.packId,jdbcType=TINYINT},
      pack_name = #{record.packName,jdbcType=VARCHAR},
      pack_img = #{record.packImg,jdbcType=VARCHAR},
      pack_fee = #{record.packFee,jdbcType=DECIMAL},
      free_money = #{record.freeMoney,jdbcType=SMALLINT},
      pack_desc = #{record.packDesc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.peacock.shop.web.domain.Pack" >
    update pack
    <set >
      <if test="packName != null" >
        pack_name = #{packName,jdbcType=VARCHAR},
      </if>
      <if test="packImg != null" >
        pack_img = #{packImg,jdbcType=VARCHAR},
      </if>
      <if test="packFee != null" >
        pack_fee = #{packFee,jdbcType=DECIMAL},
      </if>
      <if test="freeMoney != null" >
        free_money = #{freeMoney,jdbcType=SMALLINT},
      </if>
      <if test="packDesc != null" >
        pack_desc = #{packDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where pack_id = #{packId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peacock.shop.web.domain.Pack" >
    update pack
    set pack_name = #{packName,jdbcType=VARCHAR},
      pack_img = #{packImg,jdbcType=VARCHAR},
      pack_fee = #{packFee,jdbcType=DECIMAL},
      free_money = #{freeMoney,jdbcType=SMALLINT},
      pack_desc = #{packDesc,jdbcType=VARCHAR}
    where pack_id = #{packId,jdbcType=TINYINT}
  </update>
</mapper>