<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peacock.shop.web.mapper.TemplateMapper" >
  <resultMap id="BaseResultMap" type="com.peacock.shop.web.domain.Template" >
    <constructor >
      <arg column="filename" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="region" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="library" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sort_order" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="id" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="number" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="type" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="theme" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    filename, region, library, sort_order, id, number, type, theme, remarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.TemplateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.peacock.shop.web.domain.TemplateExample" >
    delete from template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.peacock.shop.web.domain.Template" >
    insert into template (filename, region, library, 
      sort_order, id, number, type, 
      theme, remarks)
    values (#{filename,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{library,jdbcType=VARCHAR}, 
      #{sortOrder,jdbcType=BIT}, #{id,jdbcType=SMALLINT}, #{number,jdbcType=BIT}, #{type,jdbcType=BIT}, 
      #{theme,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.peacock.shop.web.domain.Template" >
    insert into template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="filename != null" >
        filename,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="library != null" >
        library,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="theme != null" >
        theme,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="library != null" >
        #{library,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=BIT},
      </if>
      <if test="id != null" >
        #{id,jdbcType=SMALLINT},
      </if>
      <if test="number != null" >
        #{number,jdbcType=BIT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="theme != null" >
        #{theme,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.peacock.shop.web.domain.TemplateExample" resultType="java.lang.Integer" >
    select count(*) from template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update template
    <set >
      <if test="record.filename != null" >
        filename = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.library != null" >
        library = #{record.library,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null" >
        sort_order = #{record.sortOrder,jdbcType=BIT},
      </if>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=SMALLINT},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=BIT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.theme != null" >
        theme = #{record.theme,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update template
    set filename = #{record.filename,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      library = #{record.library,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=BIT},
      id = #{record.id,jdbcType=SMALLINT},
      number = #{record.number,jdbcType=BIT},
      type = #{record.type,jdbcType=BIT},
      theme = #{record.theme,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>