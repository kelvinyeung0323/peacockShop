<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peacock.shop.web.mapper.ShippingMapper" >
  <resultMap id="BaseResultMap" type="com.peacock.shop.web.domain.Shipping" >
    <constructor >
      <idArg column="shipping_id" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="shipping_code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="shipping_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="shipping_desc" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="insure" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="support_cod" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="enabled" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="print_bg" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="print_model" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="shipping_order" jdbcType="TINYINT" javaType="java.lang.Byte" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.peacock.shop.web.domain.ShippingWithBLOBs" >
    <constructor >
      <idArg column="shipping_id" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="shipping_code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="shipping_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="shipping_desc" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="insure" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="support_cod" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="enabled" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="print_bg" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="print_model" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="shipping_order" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="shipping_print" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="config_lable" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    shipping_id, shipping_code, shipping_name, shipping_desc, insure, support_cod, enabled, 
    print_bg, print_model, shipping_order
  </sql>
  <sql id="Blob_Column_List" >
    shipping_print, config_lable
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.peacock.shop.web.domain.ShippingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shipping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.ShippingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shipping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Byte" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shipping
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte" >
    delete from shipping
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.peacock.shop.web.domain.ShippingExample" >
    delete from shipping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.peacock.shop.web.domain.ShippingWithBLOBs" >
    insert into shipping (shipping_id, shipping_code, shipping_name, 
      shipping_desc, insure, support_cod, 
      enabled, print_bg, print_model, 
      shipping_order, shipping_print, config_lable
      )
    values (#{shippingId,jdbcType=TINYINT}, #{shippingCode,jdbcType=VARCHAR}, #{shippingName,jdbcType=VARCHAR}, 
      #{shippingDesc,jdbcType=VARCHAR}, #{insure,jdbcType=VARCHAR}, #{supportCod,jdbcType=BIT}, 
      #{enabled,jdbcType=BIT}, #{printBg,jdbcType=VARCHAR}, #{printModel,jdbcType=BIT}, 
      #{shippingOrder,jdbcType=TINYINT}, #{shippingPrint,jdbcType=LONGVARCHAR}, #{configLable,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.peacock.shop.web.domain.ShippingWithBLOBs" >
    insert into shipping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shippingId != null" >
        shipping_id,
      </if>
      <if test="shippingCode != null" >
        shipping_code,
      </if>
      <if test="shippingName != null" >
        shipping_name,
      </if>
      <if test="shippingDesc != null" >
        shipping_desc,
      </if>
      <if test="insure != null" >
        insure,
      </if>
      <if test="supportCod != null" >
        support_cod,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="printBg != null" >
        print_bg,
      </if>
      <if test="printModel != null" >
        print_model,
      </if>
      <if test="shippingOrder != null" >
        shipping_order,
      </if>
      <if test="shippingPrint != null" >
        shipping_print,
      </if>
      <if test="configLable != null" >
        config_lable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shippingId != null" >
        #{shippingId,jdbcType=TINYINT},
      </if>
      <if test="shippingCode != null" >
        #{shippingCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingName != null" >
        #{shippingName,jdbcType=VARCHAR},
      </if>
      <if test="shippingDesc != null" >
        #{shippingDesc,jdbcType=VARCHAR},
      </if>
      <if test="insure != null" >
        #{insure,jdbcType=VARCHAR},
      </if>
      <if test="supportCod != null" >
        #{supportCod,jdbcType=BIT},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="printBg != null" >
        #{printBg,jdbcType=VARCHAR},
      </if>
      <if test="printModel != null" >
        #{printModel,jdbcType=BIT},
      </if>
      <if test="shippingOrder != null" >
        #{shippingOrder,jdbcType=TINYINT},
      </if>
      <if test="shippingPrint != null" >
        #{shippingPrint,jdbcType=LONGVARCHAR},
      </if>
      <if test="configLable != null" >
        #{configLable,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.peacock.shop.web.domain.ShippingExample" resultType="java.lang.Integer" >
    select count(*) from shipping
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shipping
    <set >
      <if test="record.shippingId != null" >
        shipping_id = #{record.shippingId,jdbcType=TINYINT},
      </if>
      <if test="record.shippingCode != null" >
        shipping_code = #{record.shippingCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingName != null" >
        shipping_name = #{record.shippingName,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingDesc != null" >
        shipping_desc = #{record.shippingDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.insure != null" >
        insure = #{record.insure,jdbcType=VARCHAR},
      </if>
      <if test="record.supportCod != null" >
        support_cod = #{record.supportCod,jdbcType=BIT},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.printBg != null" >
        print_bg = #{record.printBg,jdbcType=VARCHAR},
      </if>
      <if test="record.printModel != null" >
        print_model = #{record.printModel,jdbcType=BIT},
      </if>
      <if test="record.shippingOrder != null" >
        shipping_order = #{record.shippingOrder,jdbcType=TINYINT},
      </if>
      <if test="record.shippingPrint != null" >
        shipping_print = #{record.shippingPrint,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.configLable != null" >
        config_lable = #{record.configLable,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update shipping
    set shipping_id = #{record.shippingId,jdbcType=TINYINT},
      shipping_code = #{record.shippingCode,jdbcType=VARCHAR},
      shipping_name = #{record.shippingName,jdbcType=VARCHAR},
      shipping_desc = #{record.shippingDesc,jdbcType=VARCHAR},
      insure = #{record.insure,jdbcType=VARCHAR},
      support_cod = #{record.supportCod,jdbcType=BIT},
      enabled = #{record.enabled,jdbcType=BIT},
      print_bg = #{record.printBg,jdbcType=VARCHAR},
      print_model = #{record.printModel,jdbcType=BIT},
      shipping_order = #{record.shippingOrder,jdbcType=TINYINT},
      shipping_print = #{record.shippingPrint,jdbcType=LONGVARCHAR},
      config_lable = #{record.configLable,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shipping
    set shipping_id = #{record.shippingId,jdbcType=TINYINT},
      shipping_code = #{record.shippingCode,jdbcType=VARCHAR},
      shipping_name = #{record.shippingName,jdbcType=VARCHAR},
      shipping_desc = #{record.shippingDesc,jdbcType=VARCHAR},
      insure = #{record.insure,jdbcType=VARCHAR},
      support_cod = #{record.supportCod,jdbcType=BIT},
      enabled = #{record.enabled,jdbcType=BIT},
      print_bg = #{record.printBg,jdbcType=VARCHAR},
      print_model = #{record.printModel,jdbcType=BIT},
      shipping_order = #{record.shippingOrder,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.peacock.shop.web.domain.ShippingWithBLOBs" >
    update shipping
    <set >
      <if test="shippingCode != null" >
        shipping_code = #{shippingCode,jdbcType=VARCHAR},
      </if>
      <if test="shippingName != null" >
        shipping_name = #{shippingName,jdbcType=VARCHAR},
      </if>
      <if test="shippingDesc != null" >
        shipping_desc = #{shippingDesc,jdbcType=VARCHAR},
      </if>
      <if test="insure != null" >
        insure = #{insure,jdbcType=VARCHAR},
      </if>
      <if test="supportCod != null" >
        support_cod = #{supportCod,jdbcType=BIT},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="printBg != null" >
        print_bg = #{printBg,jdbcType=VARCHAR},
      </if>
      <if test="printModel != null" >
        print_model = #{printModel,jdbcType=BIT},
      </if>
      <if test="shippingOrder != null" >
        shipping_order = #{shippingOrder,jdbcType=TINYINT},
      </if>
      <if test="shippingPrint != null" >
        shipping_print = #{shippingPrint,jdbcType=LONGVARCHAR},
      </if>
      <if test="configLable != null" >
        config_lable = #{configLable,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.peacock.shop.web.domain.ShippingWithBLOBs" >
    update shipping
    set shipping_code = #{shippingCode,jdbcType=VARCHAR},
      shipping_name = #{shippingName,jdbcType=VARCHAR},
      shipping_desc = #{shippingDesc,jdbcType=VARCHAR},
      insure = #{insure,jdbcType=VARCHAR},
      support_cod = #{supportCod,jdbcType=BIT},
      enabled = #{enabled,jdbcType=BIT},
      print_bg = #{printBg,jdbcType=VARCHAR},
      print_model = #{printModel,jdbcType=BIT},
      shipping_order = #{shippingOrder,jdbcType=TINYINT},
      shipping_print = #{shippingPrint,jdbcType=LONGVARCHAR},
      config_lable = #{configLable,jdbcType=LONGVARCHAR}
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peacock.shop.web.domain.Shipping" >
    update shipping
    set shipping_code = #{shippingCode,jdbcType=VARCHAR},
      shipping_name = #{shippingName,jdbcType=VARCHAR},
      shipping_desc = #{shippingDesc,jdbcType=VARCHAR},
      insure = #{insure,jdbcType=VARCHAR},
      support_cod = #{supportCod,jdbcType=BIT},
      enabled = #{enabled,jdbcType=BIT},
      print_bg = #{printBg,jdbcType=VARCHAR},
      print_model = #{printModel,jdbcType=BIT},
      shipping_order = #{shippingOrder,jdbcType=TINYINT}
    where shipping_id = #{shippingId,jdbcType=TINYINT}
  </update>
</mapper>