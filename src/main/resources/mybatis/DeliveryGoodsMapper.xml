<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peacock.shop.web.mapper.DeliveryGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.peacock.shop.web.domain.DeliveryGoods" >
    <constructor >
      <idArg column="rec_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="delivery_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="goods_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="product_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="product_sn" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goods_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="brand_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goods_sn" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_real" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="extension_code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="send_number" jdbcType="SMALLINT" javaType="java.lang.Short" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.peacock.shop.web.domain.DeliveryGoods" >
    <constructor >
      <idArg column="rec_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="delivery_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="goods_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="product_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="product_sn" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goods_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="brand_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goods_sn" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_real" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="extension_code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="send_number" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="goods_attr" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rec_id, delivery_id, goods_id, product_id, product_sn, goods_name, brand_name, goods_sn, 
    is_real, extension_code, parent_id, send_number
  </sql>
  <sql id="Blob_Column_List" >
    goods_attr
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.peacock.shop.web.domain.DeliveryGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from delivery_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.DeliveryGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from delivery_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from delivery_goods
    where rec_id = #{recId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from delivery_goods
    where rec_id = #{recId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.peacock.shop.web.domain.DeliveryGoodsExample" >
    delete from delivery_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.peacock.shop.web.domain.DeliveryGoods" >
    insert into delivery_goods (rec_id, delivery_id, goods_id, 
      product_id, product_sn, goods_name, 
      brand_name, goods_sn, is_real, 
      extension_code, parent_id, send_number, 
      goods_attr)
    values (#{recId,jdbcType=INTEGER}, #{deliveryId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{productId,jdbcType=INTEGER}, #{productSn,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{brandName,jdbcType=VARCHAR}, #{goodsSn,jdbcType=VARCHAR}, #{isReal,jdbcType=BIT}, 
      #{extensionCode,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{sendNumber,jdbcType=SMALLINT}, 
      #{goodsAttr,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.peacock.shop.web.domain.DeliveryGoods" >
    insert into delivery_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recId != null" >
        rec_id,
      </if>
      <if test="deliveryId != null" >
        delivery_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productSn != null" >
        product_sn,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="brandName != null" >
        brand_name,
      </if>
      <if test="goodsSn != null" >
        goods_sn,
      </if>
      <if test="isReal != null" >
        is_real,
      </if>
      <if test="extensionCode != null" >
        extension_code,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="sendNumber != null" >
        send_number,
      </if>
      <if test="goodsAttr != null" >
        goods_attr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recId != null" >
        #{recId,jdbcType=INTEGER},
      </if>
      <if test="deliveryId != null" >
        #{deliveryId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productSn != null" >
        #{productSn,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null" >
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSn != null" >
        #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="isReal != null" >
        #{isReal,jdbcType=BIT},
      </if>
      <if test="extensionCode != null" >
        #{extensionCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sendNumber != null" >
        #{sendNumber,jdbcType=SMALLINT},
      </if>
      <if test="goodsAttr != null" >
        #{goodsAttr,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.peacock.shop.web.domain.DeliveryGoodsExample" resultType="java.lang.Integer" >
    select count(*) from delivery_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update delivery_goods
    <set >
      <if test="record.recId != null" >
        rec_id = #{record.recId,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryId != null" >
        delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productSn != null" >
        product_sn = #{record.productSn,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.brandName != null" >
        brand_name = #{record.brandName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSn != null" >
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="record.isReal != null" >
        is_real = #{record.isReal,jdbcType=BIT},
      </if>
      <if test="record.extensionCode != null" >
        extension_code = #{record.extensionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.sendNumber != null" >
        send_number = #{record.sendNumber,jdbcType=SMALLINT},
      </if>
      <if test="record.goodsAttr != null" >
        goods_attr = #{record.goodsAttr,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update delivery_goods
    set rec_id = #{record.recId,jdbcType=INTEGER},
      delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_sn = #{record.productSn,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      is_real = #{record.isReal,jdbcType=BIT},
      extension_code = #{record.extensionCode,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      send_number = #{record.sendNumber,jdbcType=SMALLINT},
      goods_attr = #{record.goodsAttr,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update delivery_goods
    set rec_id = #{record.recId,jdbcType=INTEGER},
      delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_sn = #{record.productSn,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      is_real = #{record.isReal,jdbcType=BIT},
      extension_code = #{record.extensionCode,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      send_number = #{record.sendNumber,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.peacock.shop.web.domain.DeliveryGoods" >
    update delivery_goods
    <set >
      <if test="deliveryId != null" >
        delivery_id = #{deliveryId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productSn != null" >
        product_sn = #{productSn,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null" >
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSn != null" >
        goods_sn = #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="isReal != null" >
        is_real = #{isReal,jdbcType=BIT},
      </if>
      <if test="extensionCode != null" >
        extension_code = #{extensionCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sendNumber != null" >
        send_number = #{sendNumber,jdbcType=SMALLINT},
      </if>
      <if test="goodsAttr != null" >
        goods_attr = #{goodsAttr,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where rec_id = #{recId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.peacock.shop.web.domain.DeliveryGoods" >
    update delivery_goods
    set delivery_id = #{deliveryId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      product_sn = #{productSn,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      brand_name = #{brandName,jdbcType=VARCHAR},
      goods_sn = #{goodsSn,jdbcType=VARCHAR},
      is_real = #{isReal,jdbcType=BIT},
      extension_code = #{extensionCode,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      send_number = #{sendNumber,jdbcType=SMALLINT},
      goods_attr = #{goodsAttr,jdbcType=LONGVARCHAR}
    where rec_id = #{recId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peacock.shop.web.domain.DeliveryGoods" >
    update delivery_goods
    set delivery_id = #{deliveryId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      product_sn = #{productSn,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      brand_name = #{brandName,jdbcType=VARCHAR},
      goods_sn = #{goodsSn,jdbcType=VARCHAR},
      is_real = #{isReal,jdbcType=BIT},
      extension_code = #{extensionCode,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      send_number = #{sendNumber,jdbcType=SMALLINT}
    where rec_id = #{recId,jdbcType=INTEGER}
  </update>
</mapper>