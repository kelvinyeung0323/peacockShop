<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peacock.shop.web.mapper.BonusTypeMapper" >
  <resultMap id="BaseResultMap" type="com.peacock.shop.web.domain.BonusType" >
    <constructor >
      <idArg column="type_id" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="type_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type_money" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="send_type" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="min_amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="max_amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="send_start_date" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="send_end_date" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="use_start_date" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="use_end_date" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="min_goods_amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    type_id, type_name, type_money, send_type, min_amount, max_amount, send_start_date, 
    send_end_date, use_start_date, use_end_date, min_goods_amount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.BonusTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bonus_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from bonus_type
    where type_id = #{typeId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from bonus_type
    where type_id = #{typeId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.peacock.shop.web.domain.BonusTypeExample" >
    delete from bonus_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.peacock.shop.web.domain.BonusType" >
    insert into bonus_type (type_id, type_name, type_money, 
      send_type, min_amount, max_amount, 
      send_start_date, send_end_date, use_start_date, 
      use_end_date, min_goods_amount)
    values (#{typeId,jdbcType=SMALLINT}, #{typeName,jdbcType=VARCHAR}, #{typeMoney,jdbcType=DECIMAL}, 
      #{sendType,jdbcType=TINYINT}, #{minAmount,jdbcType=DECIMAL}, #{maxAmount,jdbcType=DECIMAL}, 
      #{sendStartDate,jdbcType=INTEGER}, #{sendEndDate,jdbcType=INTEGER}, #{useStartDate,jdbcType=INTEGER}, 
      #{useEndDate,jdbcType=INTEGER}, #{minGoodsAmount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.peacock.shop.web.domain.BonusType" >
    insert into bonus_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="typeName != null" >
        type_name,
      </if>
      <if test="typeMoney != null" >
        type_money,
      </if>
      <if test="sendType != null" >
        send_type,
      </if>
      <if test="minAmount != null" >
        min_amount,
      </if>
      <if test="maxAmount != null" >
        max_amount,
      </if>
      <if test="sendStartDate != null" >
        send_start_date,
      </if>
      <if test="sendEndDate != null" >
        send_end_date,
      </if>
      <if test="useStartDate != null" >
        use_start_date,
      </if>
      <if test="useEndDate != null" >
        use_end_date,
      </if>
      <if test="minGoodsAmount != null" >
        min_goods_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=SMALLINT},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeMoney != null" >
        #{typeMoney,jdbcType=DECIMAL},
      </if>
      <if test="sendType != null" >
        #{sendType,jdbcType=TINYINT},
      </if>
      <if test="minAmount != null" >
        #{minAmount,jdbcType=DECIMAL},
      </if>
      <if test="maxAmount != null" >
        #{maxAmount,jdbcType=DECIMAL},
      </if>
      <if test="sendStartDate != null" >
        #{sendStartDate,jdbcType=INTEGER},
      </if>
      <if test="sendEndDate != null" >
        #{sendEndDate,jdbcType=INTEGER},
      </if>
      <if test="useStartDate != null" >
        #{useStartDate,jdbcType=INTEGER},
      </if>
      <if test="useEndDate != null" >
        #{useEndDate,jdbcType=INTEGER},
      </if>
      <if test="minGoodsAmount != null" >
        #{minGoodsAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.peacock.shop.web.domain.BonusTypeExample" resultType="java.lang.Integer" >
    select count(*) from bonus_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bonus_type
    <set >
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=SMALLINT},
      </if>
      <if test="record.typeName != null" >
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeMoney != null" >
        type_money = #{record.typeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.sendType != null" >
        send_type = #{record.sendType,jdbcType=TINYINT},
      </if>
      <if test="record.minAmount != null" >
        min_amount = #{record.minAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.maxAmount != null" >
        max_amount = #{record.maxAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.sendStartDate != null" >
        send_start_date = #{record.sendStartDate,jdbcType=INTEGER},
      </if>
      <if test="record.sendEndDate != null" >
        send_end_date = #{record.sendEndDate,jdbcType=INTEGER},
      </if>
      <if test="record.useStartDate != null" >
        use_start_date = #{record.useStartDate,jdbcType=INTEGER},
      </if>
      <if test="record.useEndDate != null" >
        use_end_date = #{record.useEndDate,jdbcType=INTEGER},
      </if>
      <if test="record.minGoodsAmount != null" >
        min_goods_amount = #{record.minGoodsAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bonus_type
    set type_id = #{record.typeId,jdbcType=SMALLINT},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      type_money = #{record.typeMoney,jdbcType=DECIMAL},
      send_type = #{record.sendType,jdbcType=TINYINT},
      min_amount = #{record.minAmount,jdbcType=DECIMAL},
      max_amount = #{record.maxAmount,jdbcType=DECIMAL},
      send_start_date = #{record.sendStartDate,jdbcType=INTEGER},
      send_end_date = #{record.sendEndDate,jdbcType=INTEGER},
      use_start_date = #{record.useStartDate,jdbcType=INTEGER},
      use_end_date = #{record.useEndDate,jdbcType=INTEGER},
      min_goods_amount = #{record.minGoodsAmount,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.peacock.shop.web.domain.BonusType" >
    update bonus_type
    <set >
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeMoney != null" >
        type_money = #{typeMoney,jdbcType=DECIMAL},
      </if>
      <if test="sendType != null" >
        send_type = #{sendType,jdbcType=TINYINT},
      </if>
      <if test="minAmount != null" >
        min_amount = #{minAmount,jdbcType=DECIMAL},
      </if>
      <if test="maxAmount != null" >
        max_amount = #{maxAmount,jdbcType=DECIMAL},
      </if>
      <if test="sendStartDate != null" >
        send_start_date = #{sendStartDate,jdbcType=INTEGER},
      </if>
      <if test="sendEndDate != null" >
        send_end_date = #{sendEndDate,jdbcType=INTEGER},
      </if>
      <if test="useStartDate != null" >
        use_start_date = #{useStartDate,jdbcType=INTEGER},
      </if>
      <if test="useEndDate != null" >
        use_end_date = #{useEndDate,jdbcType=INTEGER},
      </if>
      <if test="minGoodsAmount != null" >
        min_goods_amount = #{minGoodsAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where type_id = #{typeId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peacock.shop.web.domain.BonusType" >
    update bonus_type
    set type_name = #{typeName,jdbcType=VARCHAR},
      type_money = #{typeMoney,jdbcType=DECIMAL},
      send_type = #{sendType,jdbcType=TINYINT},
      min_amount = #{minAmount,jdbcType=DECIMAL},
      max_amount = #{maxAmount,jdbcType=DECIMAL},
      send_start_date = #{sendStartDate,jdbcType=INTEGER},
      send_end_date = #{sendEndDate,jdbcType=INTEGER},
      use_start_date = #{useStartDate,jdbcType=INTEGER},
      use_end_date = #{useEndDate,jdbcType=INTEGER},
      min_goods_amount = #{minGoodsAmount,jdbcType=DECIMAL}
    where type_id = #{typeId,jdbcType=SMALLINT}
  </update>
</mapper>