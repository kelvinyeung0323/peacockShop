<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peacock.shop.web.mapper.LinkGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.peacock.shop.web.domain.LinkGoods" >
    <constructor >
      <idArg column="goods_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <idArg column="link_goods_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <idArg column="admin_id" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="is_double" jdbcType="BIT" javaType="java.lang.Boolean" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goods_id, link_goods_id, admin_id, is_double
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.LinkGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from link_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.LinkGoodsKey" >
    select 
    <include refid="Base_Column_List" />
    from link_goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
      and link_goods_id = #{linkGoodsId,jdbcType=INTEGER}
      and admin_id = #{adminId,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.peacock.shop.web.domain.LinkGoodsKey" >
    delete from link_goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
      and link_goods_id = #{linkGoodsId,jdbcType=INTEGER}
      and admin_id = #{adminId,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.peacock.shop.web.domain.LinkGoodsExample" >
    delete from link_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.peacock.shop.web.domain.LinkGoods" >
    insert into link_goods (goods_id, link_goods_id, admin_id, 
      is_double)
    values (#{goodsId,jdbcType=INTEGER}, #{linkGoodsId,jdbcType=INTEGER}, #{adminId,jdbcType=TINYINT}, 
      #{isDouble,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.peacock.shop.web.domain.LinkGoods" >
    insert into link_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="linkGoodsId != null" >
        link_goods_id,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="isDouble != null" >
        is_double,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="linkGoodsId != null" >
        #{linkGoodsId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=TINYINT},
      </if>
      <if test="isDouble != null" >
        #{isDouble,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.peacock.shop.web.domain.LinkGoodsExample" resultType="java.lang.Integer" >
    select count(*) from link_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update link_goods
    <set >
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.linkGoodsId != null" >
        link_goods_id = #{record.linkGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=TINYINT},
      </if>
      <if test="record.isDouble != null" >
        is_double = #{record.isDouble,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update link_goods
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      link_goods_id = #{record.linkGoodsId,jdbcType=INTEGER},
      admin_id = #{record.adminId,jdbcType=TINYINT},
      is_double = #{record.isDouble,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.peacock.shop.web.domain.LinkGoods" >
    update link_goods
    <set >
      <if test="isDouble != null" >
        is_double = #{isDouble,jdbcType=BIT},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
      and link_goods_id = #{linkGoodsId,jdbcType=INTEGER}
      and admin_id = #{adminId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peacock.shop.web.domain.LinkGoods" >
    update link_goods
    set is_double = #{isDouble,jdbcType=BIT}
    where goods_id = #{goodsId,jdbcType=INTEGER}
      and link_goods_id = #{linkGoodsId,jdbcType=INTEGER}
      and admin_id = #{adminId,jdbcType=TINYINT}
  </update>
</mapper>