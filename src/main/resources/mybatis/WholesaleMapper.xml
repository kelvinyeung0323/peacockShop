<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peacock.shop.web.mapper.WholesaleMapper" >
  <resultMap id="BaseResultMap" type="com.peacock.shop.web.domain.Wholesale" >
    <constructor >
      <idArg column="act_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="goods_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="goods_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="rank_ids" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="enabled" jdbcType="TINYINT" javaType="java.lang.Byte" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.peacock.shop.web.domain.Wholesale" >
    <constructor >
      <idArg column="act_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="goods_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="goods_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="rank_ids" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="enabled" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="prices" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    act_id, goods_id, goods_name, rank_ids, enabled
  </sql>
  <sql id="Blob_Column_List" >
    prices
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.peacock.shop.web.domain.WholesaleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wholesale
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.WholesaleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from wholesale
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wholesale
    where act_id = #{actId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wholesale
    where act_id = #{actId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.peacock.shop.web.domain.WholesaleExample" >
    delete from wholesale
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.peacock.shop.web.domain.Wholesale" >
    insert into wholesale (act_id, goods_id, goods_name, 
      rank_ids, enabled, prices
      )
    values (#{actId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, 
      #{rankIds,jdbcType=VARCHAR}, #{enabled,jdbcType=TINYINT}, #{prices,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.peacock.shop.web.domain.Wholesale" >
    insert into wholesale
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="actId != null" >
        act_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="rankIds != null" >
        rank_ids,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="prices != null" >
        prices,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="actId != null" >
        #{actId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="rankIds != null" >
        #{rankIds,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="prices != null" >
        #{prices,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.peacock.shop.web.domain.WholesaleExample" resultType="java.lang.Integer" >
    select count(*) from wholesale
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update wholesale
    <set >
      <if test="record.actId != null" >
        act_id = #{record.actId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.rankIds != null" >
        rank_ids = #{record.rankIds,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=TINYINT},
      </if>
      <if test="record.prices != null" >
        prices = #{record.prices,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update wholesale
    set act_id = #{record.actId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      rank_ids = #{record.rankIds,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=TINYINT},
      prices = #{record.prices,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update wholesale
    set act_id = #{record.actId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      rank_ids = #{record.rankIds,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.peacock.shop.web.domain.Wholesale" >
    update wholesale
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="rankIds != null" >
        rank_ids = #{rankIds,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="prices != null" >
        prices = #{prices,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where act_id = #{actId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.peacock.shop.web.domain.Wholesale" >
    update wholesale
    set goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      rank_ids = #{rankIds,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=TINYINT},
      prices = #{prices,jdbcType=LONGVARCHAR}
    where act_id = #{actId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peacock.shop.web.domain.Wholesale" >
    update wholesale
    set goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      rank_ids = #{rankIds,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=TINYINT}
    where act_id = #{actId,jdbcType=INTEGER}
  </update>
</mapper>