<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peacock.shop.web.mapper.CallbackStatusMapper" >
  <resultMap id="BaseResultMap" type="com.peacock.shop.web.domain.CallbackStatus" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="msg_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="type_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="date_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="disabled" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="times" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="method" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="http_type" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.peacock.shop.web.domain.CallbackStatus" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="msg_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="type_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="date_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="disabled" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="times" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="method" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="http_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="data" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, msg_id, type, status, type_id, date_time, disabled, times, method, http_type
  </sql>
  <sql id="Blob_Column_List" >
    data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.peacock.shop.web.domain.CallbackStatusExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from callback_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.peacock.shop.web.domain.CallbackStatusExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from callback_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from callback_status
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from callback_status
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.peacock.shop.web.domain.CallbackStatusExample" >
    delete from callback_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.peacock.shop.web.domain.CallbackStatus" >
    insert into callback_status (id, msg_id, type, 
      status, type_id, date_time, 
      disabled, times, method, 
      http_type, data)
    values (#{id,jdbcType=BIGINT}, #{msgId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{typeId,jdbcType=VARCHAR}, #{dateTime,jdbcType=INTEGER}, 
      #{disabled,jdbcType=CHAR}, #{times,jdbcType=TINYINT}, #{method,jdbcType=VARCHAR}, 
      #{httpType,jdbcType=VARCHAR}, #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.peacock.shop.web.domain.CallbackStatus" >
    insert into callback_status
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="dateTime != null" >
        date_time,
      </if>
      <if test="disabled != null" >
        disabled,
      </if>
      <if test="times != null" >
        times,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="httpType != null" >
        http_type,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="msgId != null" >
        #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null" >
        #{dateTime,jdbcType=INTEGER},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=CHAR},
      </if>
      <if test="times != null" >
        #{times,jdbcType=TINYINT},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="httpType != null" >
        #{httpType,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.peacock.shop.web.domain.CallbackStatusExample" resultType="java.lang.Integer" >
    select count(*) from callback_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update callback_status
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.dateTime != null" >
        date_time = #{record.dateTime,jdbcType=INTEGER},
      </if>
      <if test="record.disabled != null" >
        disabled = #{record.disabled,jdbcType=CHAR},
      </if>
      <if test="record.times != null" >
        times = #{record.times,jdbcType=TINYINT},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.httpType != null" >
        http_type = #{record.httpType,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null" >
        data = #{record.data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update callback_status
    set id = #{record.id,jdbcType=BIGINT},
      msg_id = #{record.msgId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      type_id = #{record.typeId,jdbcType=VARCHAR},
      date_time = #{record.dateTime,jdbcType=INTEGER},
      disabled = #{record.disabled,jdbcType=CHAR},
      times = #{record.times,jdbcType=TINYINT},
      method = #{record.method,jdbcType=VARCHAR},
      http_type = #{record.httpType,jdbcType=VARCHAR},
      data = #{record.data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update callback_status
    set id = #{record.id,jdbcType=BIGINT},
      msg_id = #{record.msgId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      type_id = #{record.typeId,jdbcType=VARCHAR},
      date_time = #{record.dateTime,jdbcType=INTEGER},
      disabled = #{record.disabled,jdbcType=CHAR},
      times = #{record.times,jdbcType=TINYINT},
      method = #{record.method,jdbcType=VARCHAR},
      http_type = #{record.httpType,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.peacock.shop.web.domain.CallbackStatus" >
    update callback_status
    <set >
      <if test="msgId != null" >
        msg_id = #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null" >
        date_time = #{dateTime,jdbcType=INTEGER},
      </if>
      <if test="disabled != null" >
        disabled = #{disabled,jdbcType=CHAR},
      </if>
      <if test="times != null" >
        times = #{times,jdbcType=TINYINT},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="httpType != null" >
        http_type = #{httpType,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.peacock.shop.web.domain.CallbackStatus" >
    update callback_status
    set msg_id = #{msgId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      date_time = #{dateTime,jdbcType=INTEGER},
      disabled = #{disabled,jdbcType=CHAR},
      times = #{times,jdbcType=TINYINT},
      method = #{method,jdbcType=VARCHAR},
      http_type = #{httpType,jdbcType=VARCHAR},
      data = #{data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.peacock.shop.web.domain.CallbackStatus" >
    update callback_status
    set msg_id = #{msgId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      date_time = #{dateTime,jdbcType=INTEGER},
      disabled = #{disabled,jdbcType=CHAR},
      times = #{times,jdbcType=TINYINT},
      method = #{method,jdbcType=VARCHAR},
      http_type = #{httpType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>